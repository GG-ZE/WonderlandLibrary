// 
// Decompiled by Procyon v0.5.36
// 

package Lavish.modules.exploit;

import Lavish.event.events.EventRenderGUI;
import net.minecraft.network.play.client.C07PacketPlayerDigging;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import net.minecraft.network.play.client.C02PacketUseEntity;
import net.minecraft.network.play.client.C16PacketClientStatus;
import net.minecraft.network.play.client.C01PacketChatMessage;
import Lavish.utils.misc.Console;
import net.minecraft.network.play.server.S12PacketEntityVelocity;
import Lavish.event.events.EventUpdate;
import net.minecraft.network.play.client.C0CPacketInput;
import net.minecraft.network.play.client.C03PacketPlayer;
import Lavish.utils.math.MathUtils;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import Lavish.event.events.EventPacket;
import Lavish.event.Event;
import Lavish.ClickGUI.settings.Setting;
import Lavish.Client;
import Lavish.modules.Category;
import net.minecraft.network.Packet;
import java.util.ArrayList;
import Lavish.utils.misc.Timer;
import Lavish.modules.Module;

public class Disabler extends Module
{
    Timer timer;
    public ArrayList<Packet> packets;
    boolean idk;
    
    public Disabler() {
        super("Disabler", 0, true, Category.Exploit, "Disables some anticheats");
        this.timer = new Timer();
        this.packets = new ArrayList<Packet>();
        this.idk = false;
        final ArrayList<String> options = new ArrayList<String>();
        options.add("Mineplex");
        options.add("SurvivalDub");
        options.add("Vehicle");
        options.add("Hover");
        options.add("Minemen");
        Client.instance.setmgr.rSetting(new Setting("Disabler Mode", this, "Mineplex", options));
    }
    
    @Override
    public void onEvent(final Event e) {
        if (Client.instance.setmgr.getSettingByName("Disabler Mode").getValString().equalsIgnoreCase("Mineplex") && e instanceof EventPacket) {
            final EventPacket event = (EventPacket)e;
            final Packet packet = event.getPacket();
            if (packet instanceof C00PacketKeepAlive) {
                final C00PacketKeepAlive c00PacketKeepAlive = (C00PacketKeepAlive)packet;
                c00PacketKeepAlive.key -= MathUtils.getRandomInRange(1000, Integer.MAX_VALUE);
            }
        }
        if (Client.instance.setmgr.getSettingByName("Disabler Mode").getValString().equalsIgnoreCase("SurvivalDub") && e instanceof EventPacket) {
            final EventPacket event = (EventPacket)e;
            final Packet packet = event.getPacket();
            if (packet instanceof C00PacketKeepAlive) {
                final C00PacketKeepAlive c00PacketKeepAlive2 = (C00PacketKeepAlive)packet;
                c00PacketKeepAlive2.key -= MathUtils.getRandomInRange(1000, Integer.MAX_VALUE);
            }
            if (packet instanceof C03PacketPlayer) {
                Disabler.mc.thePlayer.sendQueue.addToSendQueue(new C0CPacketInput());
            }
        }
        if (Client.instance.setmgr.getSettingByName("Disabler Mode").getValString().equalsIgnoreCase("Hover") && e instanceof EventUpdate) {
            final EventUpdate event2 = (EventUpdate)e;
            event2.setY(event2.getY() + 5.0);
        }
        if (Client.instance.setmgr.getSettingByName("Disabler Mode").getValString().equalsIgnoreCase("Minemen")) {
            if (e instanceof EventPacket) {
                final EventPacket event = (EventPacket)e;
                final Packet packet = event.getPacket();
                if (packet instanceof S12PacketEntityVelocity && !this.idk) {
                    Console.sendChatToPlayer("ok");
                    if (!(((EventPacket)e).getPacket() instanceof C01PacketChatMessage) && !(((EventPacket)e).getPacket() instanceof C16PacketClientStatus) && !(((EventPacket)e).getPacket() instanceof C00PacketKeepAlive) && Disabler.mc.theWorld != null) {
                        e.setCancelled(true);
                    }
                    final boolean input = Disabler.mc.gameSettings.keyBindForward.pressed || Disabler.mc.gameSettings.keyBindBack.pressed || Disabler.mc.gameSettings.keyBindRight.pressed || Disabler.mc.gameSettings.keyBindLeft.pressed || Disabler.mc.gameSettings.keyBindJump.pressed || Disabler.mc.gameSettings.keyBindSneak.pressed;
                    if (input && ((EventPacket)e).getPacket() instanceof C03PacketPlayer) {
                        this.packets.add(((EventPacket)e).getPacket());
                    }
                    if (((EventPacket)e).getPacket() instanceof C02PacketUseEntity || ((EventPacket)e).getPacket() instanceof C08PacketPlayerBlockPlacement || ((EventPacket)e).getPacket() instanceof C07PacketPlayerDigging) {
                        this.packets.add(((EventPacket)e).getPacket());
                    }
                }
            }
            if (e instanceof EventRenderGUI) {
                Client.instance.font20.drawString("Packets: " + this.packets.size(), (float)(Disabler.mc.displayWidth / 2 / 2 - Client.instance.font20.getStringWidth("Packets: " + this.packets.size()) / 2), 30.0f, -1, false);
            }
        }
    }
    
    @Override
    public void onUpdate() {
        if (Client.instance.setmgr.getSettingByName("Disabler Mode").getValString().equalsIgnoreCase("Vehicle")) {
            Disabler.mc.thePlayer.sendQueue.addToSendQueue(new C0CPacketInput());
        }
    }
}
