/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  kotlin.jvm.internal.Intrinsics
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit;

import kotlin.jvm.internal.Intrinsics;
import net.ccbluex.liquidbounce.api.MinecraftVersion;
import net.ccbluex.liquidbounce.api.minecraft.client.entity.IEntity;
import net.ccbluex.liquidbounce.api.minecraft.client.network.IINetHandlerPlayClient;
import net.ccbluex.liquidbounce.api.minecraft.network.play.client.ICPacketUseEntity;
import net.ccbluex.liquidbounce.event.AttackEvent;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.MinecraftInstance;

@ModuleInfo(name="VehicleOneHit", description="Allows you to break vehicles with a single hit.", category=ModuleCategory.EXPLOIT, supportedVersions={MinecraftVersion.MC_1_8})
public final class VehicleOneHit
extends Module {
    /*
     * WARNING - void declaration
     */
    @EventTarget
    public final void onAttack(AttackEvent event) {
        IEntity targetEntity = event.getTargetEntity();
        if (MinecraftInstance.classProvider.isEntityBoat(targetEntity) || MinecraftInstance.classProvider.isEntityMinecart(targetEntity)) {
            int n = 0;
            int n2 = 3;
            while (n <= n2) {
                void i;
                MinecraftInstance.mc.getNetHandler().addToSendQueue(MinecraftInstance.classProvider.createCPacketAnimation());
                IINetHandlerPlayClient iINetHandlerPlayClient = MinecraftInstance.mc.getNetHandler();
                IEntity iEntity = targetEntity;
                if (iEntity == null) {
                    Intrinsics.throwNpe();
                }
                iINetHandlerPlayClient.addToSendQueue(MinecraftInstance.classProvider.createCPacketUseEntity(iEntity, ICPacketUseEntity.WAction.ATTACK));
                ++i;
            }
        }
    }
}

