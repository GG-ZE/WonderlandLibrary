package epsilon.modules.exploit;

import java.util.ArrayList;

import org.apache.commons.lang3.RandomUtils;
import org.lwjgl.input.Keyboard;
import org.lwjgl.input.Mouse;

import epsilon.Epsilon;
import epsilon.events.Event;
import epsilon.events.listeners.EventMotion;
import epsilon.events.listeners.EventUpdate;
import epsilon.events.listeners.packet.EventReceivePacket;
import epsilon.modules.Module;
import epsilon.settings.setting.BooleanSetting;
import epsilon.settings.setting.ModeSetting;
import epsilon.util.MoveUtil;
import epsilon.util.Timer;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C03PacketPlayer.C04PacketPlayerPosition;
import net.minecraft.network.play.client.C0BPacketEntityAction;
import net.minecraft.network.play.client.C0CPacketInput;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;
import net.minecraft.network.play.client.C18PacketSpectate;
import net.minecraft.util.BlockPos;
import net.minecraft.util.Vec3;
import net.minecraft.network.play.client.C17PacketCustomPayload;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import net.minecraft.block.BlockAir;
import net.minecraft.client.Minecraft;
import net.minecraft.network.Packet;



public class PositionExploit extends Module {
	
	public ModeSetting mode = new ModeSetting("Mode", "Hypixel", "NCP", "Hypixel","MatrixVert","Matrix", "Vulcan", "NormalStrict", "Spartan");
	public ModeSetting type = new ModeSetting("Type", "ClickTP", "Command(.tp)","ClickTP");
	public ModeSetting gt = new ModeSetting("Type", "OnGround", "OnGround", "OffGround","On/OffSwitch");
	public BooleanSetting fl1 = new BooleanSetting("NoFlagHelper1", true);
	public BooleanSetting fl2 = new BooleanSetting("NoFlagHelper2", true);
	public BooleanSetting vis = new BooleanSetting("PreEmptive", false);
	private double tpX, tpY, tpZ;
	private double pX, pY, pZ, yyy;
	public static int hypixelDmgCount;
	public Timer timer = new Timer();
	boolean isSet = false;
	boolean beginDmg;
	
	/*
	This is actually so retarded it hurts, and it bypasses everything
	*/
	
	
	
	public PositionExploit(){
		super("Teleport", Keyboard.KEY_NONE, Category.EXPLOIT, "Abuses vanilla mechanics to lag you into the position");
		this.addSettings(mode, type, fl1, fl2, gt, vis);
	}
	
	
	public void onEnable(){
		if(mode.getMode()=="Hypixel")	Epsilon.addChatMessage("I dont know why but sometimes hypixel TP wont attempt TP, so just, wait 1s disable, wait 1s then re-enable.");
		beginDmg =false;
		hypixelDmgCount =0;
		pX = mc.thePlayer.posX;
		pY=mc.thePlayer.posY;
		pZ=mc.thePlayer.posZ;
		
	}
	
	public void onDisable(){
		beginDmg=false;
		hypixelDmgCount =(int) (pY=pX=pY=0);
		
		
		if(fl1.isEnabled()) {
			mc.thePlayer.motionY = 0;
		}
		if(fl2.isEnabled()) {
			mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer.C04PacketPlayerPosition());
		}
	}
	
	
	
	public void onEvent(Event e){
		
		if(e instanceof EventReceivePacket) {

			switch(mode.getMode()) {
			case "MatrixVert":
				hypixelDmgCount++;
				if(hypixelDmgCount>10)
					this.toggle();
				break;
			}
		}
		
		if(e instanceof EventMotion) {
			if(e.isPre()) {
				this.displayInfo = mode.getMode();
				switch(mode.getMode()) {
				case "MatrixVert":
					
					if(mc.thePlayer.onGround) {
						yyy = mc.thePlayer.posY;
						mc.thePlayer.jump();
					}
					mc.thePlayer.setPosition(mc.thePlayer.lastTickPosX, mc.thePlayer.posY + (mc.thePlayer.posY-yyy), mc.thePlayer.lastTickPosZ);
					
					if(mc.thePlayer.posY-30>yyy && this.toggled)
						this.toggle();
					
					break;
				}
			}
		}
		
		if(e instanceof EventUpdate){
			if(e.isPre()) {
				if (mode.getMode() != "Hypixel" ) {
					if (mc.gameSettings.keyBindUseItem.getIsKeyPressed()) {
			            // Creating a variable that gets the block that the user is looking at and creating another variable with incremented Y position of the position so that the user teleports on top of the block.
			            final BlockPos pos = mc.thePlayer.rayTrace(999, 1).getBlockPos();
			            final BlockPos tpPos = pos.up();
	
			            // Checking if the block at the position is air and returning and checking if the teleport position isn't air and returning if it isn't.
			            if (mc.theWorld.getBlockState(pos).getBlock() instanceof BlockAir || !(mc.theWorld.getBlockState(tpPos).getBlock() instanceof BlockAir))
			                return;
			            
			            
			            
			            	if(mc.thePlayer.serverPosX != tpPos.getX() && mc.thePlayer.serverPosY != tpPos.getY() && mc.thePlayer.serverPosZ != tpPos.getZ()) {
				            	if(gt.getMode() == "OnGround" || gt.getMode() == "On/OffSwitch") {
								mc.thePlayer.onGround = true;
				            	}
				            	mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer.C04PacketPlayerPosition(tpPos.getX(), tpPos.getY(), tpPos.getZ(), mc.inGameHasFocus));
				            	if(gt.getMode() == "OffGround" || gt.getMode() == "On/OffSwitch") {
									mc.thePlayer.onGround = false;
								}
				            	if(vis.isEnabled()) {
									mc.thePlayer.setPosition(tpPos.getX(), tpPos.getY(), tpPos.getZ());
								}
			            	}	
			             }
					if(type.getMode() == "Command(.tp)" ) {
						//if(mc.thePlayer.serverPosX != 50 && mc.thePlayer.serverPosY != 100 && mc.thePlayer.serverPosZ != 50) {
							if(gt.getMode() == "OnGround" || gt.getMode() == "On/OffSwitch") {
								mc.thePlayer.onGround = true;
							}
							mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer.C04PacketPlayerPosition(mc.thePlayer.posX, 100, mc.thePlayer.posX, mc.inGameHasFocus));
							mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer(true));
							if(gt.getMode() == "OffGround" || gt.getMode() == "On/OffSwitch") {
								mc.thePlayer.onGround = false;
							}
							if(vis.isEnabled()) {
								mc.thePlayer.setPosition(50, 100, 50);
							}
						//}	
					}
				}
				if (mode.getMode() == "Hypixel" ) {
					BlockPos pos;
		            BlockPos tpPos;
		            pos = mc.thePlayer.rayTrace(999, 1).getBlockPos();
					tpPos = pos.up();
		            
					if (mc.gameSettings.keyBindUseItem.getIsKeyPressed() && timer.hasTimeElapsed(1, true)) {
						beginDmg=true;
			            // Creating a variable that gets the block that the user is looking at and creating another variable with incremented Y position of the position so that the user teleports on top of the block.
						pos = mc.thePlayer.rayTrace(999, 1).getBlockPos();
			            tpPos = pos.up();
	
			            // Checking if the block at the position is air and returning and checking if the teleport position isn't air and returning if it isn't.
			            if (mc.theWorld.getBlockState(pos).getBlock() instanceof BlockAir || !(mc.theWorld.getBlockState(tpPos).getBlock() instanceof BlockAir))
			                return;
			            if(pos!=null&&tpPos!=null&&mode.getMode() =="Hypixel"&& Math.round(mc.thePlayer.posX) == tpPos.getX()&& Math.round(mc.thePlayer.posZ)==tpPos.getZ() &&this.toggled)
			            	this.toggled =false;
			            else {
			            	Epsilon.addChatMessage((mc.thePlayer.posX*Math.random())+"  "+(tpPos.getX()*Math.random())+" "+(mc.thePlayer.posZ*Math.random())+"  "+(tpPos.getZ()*Math.random()));//Bipasvalues :trol:
			            }
			            	
			             }
					if(hypixelDmgCount>10 || (mc.thePlayer.hurtTime>0&& mc.thePlayer.onGround)) {
						if(mc.thePlayer.posX !=pX&&mc.thePlayer.posZ !=pZ &&this.toggled) {
							this.toggled = false;
						}
						
		            	if(gt.getMode() == "OnGround" || gt.getMode() == "On/OffSwitch") {
						mc.thePlayer.onGround = true;
		            	}
		            	mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer.C04PacketPlayerPosition(tpPos.getX(), tpPos.getY(), tpPos.getZ(), mc.inGameHasFocus));
		            	if(gt.getMode() == "OffGround" || gt.getMode() == "On/OffSwitch") {
							mc.thePlayer.onGround = false;
						}
		            	if(vis.isEnabled()) {
							mc.thePlayer.setPosition(tpPos.getX(), tpPos.getY(), tpPos.getZ());
						}
	            	}	
					
				}
				
				
			}
			
		}
		if(e instanceof EventMotion) {
			EventMotion event = (EventMotion)e;
			if(mode.getMode()== "Hypixel"&&beginDmg) {
				if(mc.thePlayer.onGround && hypixelDmgCount<=6) {
					event.setOnGround(false);
					mc.thePlayer.jump();
					MoveUtil moveUtil = new MoveUtil();
					moveUtil.setMoveSpeed(0);
					hypixelDmgCount++;
				}
				if(hypixelDmgCount>6 && hypixelDmgCount<10 &&mc.thePlayer.onGround ) {
					mc.thePlayer.sendQueue.addToSendQueue(new C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, true));
					hypixelDmgCount++;
				}
				
				if(mc.thePlayer.hurtTime>0 &&mc.thePlayer.onGround) {
					hypixelDmgCount = 6969; //Why
				}
				
			}	
			
		}
	}
}