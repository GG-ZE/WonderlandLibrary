package epsilon.modules.exploit;

import org.lwjgl.input.Keyboard;

import epsilon.Epsilon;
import epsilon.events.Event;
import epsilon.events.listeners.EventMotion;
import epsilon.events.listeners.EventRiding;
import epsilon.events.listeners.packet.EventReceivePacket;
import epsilon.events.listeners.packet.EventSendPacket;
import epsilon.modules.Module;
import epsilon.settings.setting.BooleanSetting;
import epsilon.settings.setting.ModeSetting;
import net.minecraft.entity.Entity;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C03PacketPlayer.C04PacketPlayerPosition;
import net.minecraft.network.play.client.C03PacketPlayer.C06PacketPlayerPosLook;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C0CPacketInput;

public class Godmode extends Module {

	private boolean desyncd;
	private Entity desyncEntity;
	private double ogX, ogY, ogZ;
	
	public BooleanSetting s08 = new BooleanSetting ("S08Disabler", false);
	public BooleanSetting auto = new BooleanSetting ("AutoExploit", false);
	
	public Godmode() {
		super("EntityTroll", Keyboard.KEY_NONE, Category.EXPLOIT, "Funni comedy hilarity");
		this.addSettings(s08, auto);
	}

	public void onEnable() {
		desyncd = false;
	}
	
	public void onDisable() {
		if(desyncd) 
			mc.getNetHandler().addToSendQueue(new C0CPacketInput(0, 0, false, true));
	}
	
	public void onEvent(Event e) {
		
		if(e instanceof EventReceivePacket) {

			Packet p = e.getPacket();
			if(p instanceof S08PacketPlayerPosLook && s08.isEnabled()) {

    			S08PacketPlayerPosLook packet = (S08PacketPlayerPosLook) p;
			}
			
		}
		
		if(e instanceof EventSendPacket) {

    		Packet p = e.getPacket();
    		
    		if(p instanceof C03PacketPlayer && desyncd) {
    			
    			C03PacketPlayer packet = (C03PacketPlayer) p;
    			
    			if(!(p instanceof C03PacketPlayer.C06PacketPlayerPosLook)) { 
    				mc.getNetHandler().addToSendQueue(new C0CPacketInput(0, 0, false, true));
    				mc.getNetHandler().addToSendQueue(new C0CPacketInput(0, 0, true, false));
    				mc.getNetHandler().addToSendQueue(new C03PacketPlayer.C06PacketPlayerPosLook(packet.x, packet.y, packet.z, packet.yaw, packet.pitch, packet.onGround));
    				mc.getNetHandler().sendPacketNoEvent(new C04PacketPlayerPosition());
    			}
    		}
		}
		
		if(e instanceof EventRiding) {
			
			
			EventRiding event = (EventRiding)e;

			desyncEntity = event.getEntity();
			
			mc.theWorld.removeEntity(event.entity);
			mc.theWorld.addEntityToWorld(1, desyncEntity);
		
			if(!desyncd) {
				ogX = event.entity.posX;
				ogY = event.entity.posY;
				ogZ = event.entity.posZ;
			}
			
			desyncd = true;
			
		
				
			
		}
		
		if(e instanceof EventMotion) {
			if(desyncd) {
				desyncEntity.posX = mc.thePlayer.posX;

				desyncEntity.posY = mc.thePlayer.posY-2;

				desyncEntity.posZ = mc.thePlayer.posZ;
			}
		}
		
	}
	
}
