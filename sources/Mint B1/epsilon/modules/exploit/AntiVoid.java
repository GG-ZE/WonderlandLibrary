package epsilon.modules.exploit;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.lwjgl.input.Keyboard;

import epsilon.Epsilon;
import epsilon.events.Event;
import epsilon.events.listeners.EventMotion;
import epsilon.events.listeners.EventUpdate;
import epsilon.modules.Module;
import epsilon.settings.setting.ModeSetting;
import epsilon.settings.setting.NumberSetting;
import epsilon.util.MoveUtil;
import net.minecraft.block.BlockAir;
import net.minecraft.network.play.client.C03PacketPlayer.C04PacketPlayerPosition;
import net.minecraft.network.play.client.C03PacketPlayer.C06PacketPlayerPosLook;
import net.minecraft.util.AxisAlignedBB;
import net.minecraft.util.BlockPos;

public class AntiVoid extends Module {


	private List<BlockPos> scannedPos = new ArrayList<BlockPos>();
	private List<BlockPos> scannedPosMiss = new ArrayList<BlockPos>();
	
	public ModeSetting mode = new ModeSetting ("Mode", "Vanilla", "Vanilla", "Flag", "NCP", "Matrix", "ThePickle", "Zonecraft");
	
	
	public NumberSetting dist = new NumberSetting ("Dist", 3, 0.5, 6, 0.5);
	
	private double y,x,z;
	
	private float fall;
	
	private boolean verusbool, setback;
	
	MoveUtil m = new MoveUtil();
	
	public AntiVoid() {
		super("AntiVoid", Keyboard.KEY_NONE, Category.EXPLOIT, "Falling into the void? NO");
		this.addSettings(mode, dist);
	}

	public void onDisable() {verusbool = false;}
	public void onEnable() {setback = false;}
	
	public void onEvent(Event e) {
		if(e instanceof EventMotion) {
			EventMotion event = (EventMotion)e;
			MoveUtil move = new MoveUtil();
			fall = mc.thePlayer.fallDistance;
			
			if(mc.thePlayer.onGround) {
				y = mc.thePlayer.posY;
				x = mc.thePlayer.posX;
				z = mc.thePlayer.posZ;
				setback = false;
			}	
			
			if(mc.thePlayer.fallDistance>0.25) setback = false;
			
			if(fall>=dist.getValue()) {
				


				if(racism() && !setback) {
					
					
					
					switch(mode.getMode()) {
					
					case "ThePickle":
						
						mc.getNetHandler().addToSendQueue(new C06PacketPlayerPosLook());
						
						break;
					
					case "Zonecraft":
						mc.thePlayer.jump();
						mc.thePlayer.motionY+=0.111;
						
						event.setOnGround(true);
						
						break;
					
					case"Vanilla":
						
						mc.thePlayer.setPosition(m.getForwardXZ(x, z, 0.5)[0], y +1, m.getForwardXZ(x, z, 0.5)[1]); // <- Centers the player to the block
						//just noticed it doesnt but cope
						
						mc.thePlayer.motionY = 0;
						break;
					
					case "NCP":
					
						event.setY(y);
						
						break;
					
						
					case "Flag":
						
						event.setOnGround(true);
						
						break;
					}

					fall = 0;
					setback = true;
					mc.thePlayer.fallDistance = 0;
				}
				
			}	
			
			
			
			
		}
		
	}
	
	private boolean racism() {
		
		for (double i = mc.thePlayer.posY+1; i > -1; i--) {
			final BlockPos pos = new BlockPos(mc.thePlayer.posX, i, mc.thePlayer.posZ);

            if (!(mc.theWorld.getBlockState(pos).getBlock() instanceof BlockAir))
                return false;
        }
        return true;
	}
}
